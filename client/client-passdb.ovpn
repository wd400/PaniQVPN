##############################################
# Sample client-side OpenVPN 2.0 config file #
# for connecting to multi-client server.     #
#                                            #
# This configuration can be used by multiple #
# clients, however each client should have   #
# its own cert and key files.                #
#                                            #
# On Windows, you might want to rename this  #
# file so it has a .ovpn extension           #
##############################################

# Specify that we are a client and that we
# will be pulling certain config file directives
# from the server.
client

# Use the same setting as you are using on
# the server.
# On most systems, the VPN will not function
# unless you partially or fully disable
# the firewall for the TUN/TAP interface.
;dev tap
dev tun

# Windows needs the TAP-Win32 adapter name
# from the Network Connections panel
# if you have more than one.  On XP SP2,
# you may need to disable the firewall
# for the TAP adapter.
;dev-node MyTap

# Are we connecting to a TCP or
# UDP server?  Use the same setting as
# on the server.
;proto tcp
proto udp

# The hostname/IP and port of the server.
# You can have multiple remote entries
# to load balance between the servers.
;remote VPN.SERVER.NAME.HERE 1194

remote wu7ege5pdbxjw4djurixlwu3cezcswy547kwuxcatiuchexov3tbqfqd.onion 8888

# Choose a random host from the remote
# list for load-balancing.  Otherwise
# try hosts in the order specified.
remote-random

# Keep trying indefinitely to resolve the
# host name of the OpenVPN server.  Very useful
# on machines which are not permanently connected
# to the internet such as laptops.
resolv-retry infinite

# Most clients don't need to bind to
# a specific local port number.
nobind

# Downgrade privileges after initialization (non-Windows only)
;user nobody
;group nogroup

# Try to preserve some state across restarts.
persist-key
persist-tun

# If you are connecting through an
# HTTP proxy to reach the actual OpenVPN
# server, put the proxy server/IP and
# port number here.  See the man page
# if your proxy server requires
# authentication.
;http-proxy-retry # retry on connection failures
;http-proxy [proxy server] [proxy port #]
socks-proxy 127.0.0.1 9150

# Wireless networks often produce a lot
# of duplicate packets.  Set this flag
# to silence duplicate packet warnings.
;mute-replay-warnings

# SSL/TLS parms.
# See the server config file for more
# description.  It's best to use
# a separate .crt/.key file pair
# for each client.  A single ca
# file can be used for all clients.
ca /home/zach/pqvpn/vpnnode/openvpn/keys/ca.crt

# Verify server certificate by checking that the
# certicate has the correct key usage set.
# This is an important precaution to protect against
# a potential attack discussed here:
#  http://openvpn.net/howto.html#mitm
#
# To use this feature, you will need to generate
# your server certificates with the keyUsage set to
#   digitalSignature, keyEncipherment
# and the extendedKeyUsage to
#   serverAuth
# EasyRSA can do this for you.
# remote-cert-tls server

# For extra security beyond that provided
# by SSL/TLS, create an "HMAC firewall"
# to help block DoS attacks and UDP port flooding.
#
# Generate with:
#   openvpn --genkey --secret ta.key
#
# The server and each client must have
# a copy of this key.
# The second parameter should be '0'
# on the server and '1' on the clients.
#
# We recommend against using this as it requires copying the secret key around, and only provides
# some defense against DoS attacks. Security of the tunnel is neither helped nor hindered by this.
#
tls-auth /home/zach/pqvpn/vpnnode/openvpn/keys/ta.key 1

# To choose a particular key exchange algorithm, specify the ecdh-curve directive. If you do not specify
# this directive, the server will negotiate any algorithm it has in common with the client, which
# includes all of the classical, non-quantum-secure ciphersuites! If you do not specify this directive here,
# the server must specify it to guarantee the use of a quantum-secure ciphersuite. If specified, this directive
# must be the same on client and server.
ecdh-curve p521_kyber90s1024

# The OQS fork of OpenSSL only implements post-quantum algorithms for TLS 1.3. TLS 1.2 and below do not have
# post-quantum functionality.
tls-version-min 1.3

# Select a cryptographic cipher.
# If the cipher option is used on the server
# then you must also specify it here.
cipher AES-256-CBC

# Select a cryptographic hash function for use with HMAC. (Default is SHA1)
auth SHA512

# Enable compression on the VPN link.
# Don't enable this unless it is also
# enabled in the server config file.
comp-lzo

# Set log file verbosity.
verb 9

# Silence repeating messages
;mute 20


route-method exe
route-delay 2

# Allow prompting the user for a username and password for authentication.
auth-user-pass

push "dhcp-option DNS 1.1.1.1"
push "block-outside-dns"
